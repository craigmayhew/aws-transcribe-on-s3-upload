AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  S3Bucket: 
    Type: String
    Default: transcribe-everything-placed-here
    Description: S3 Bucket to place mp4 files into, and receive transcribed file into. This needs to be unique.
  LambdaFunctionName:
    Type: String
    Default: CreateTranscription
    Description: Name of the lambda function. This doesn't need to be changed.
Resources:
  CreateTranscription:
    DependsOn: LambdaExecutionRole
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |       
          from __future__ import print_function
          
          def handler(event, context):
            return "Deploy a zip over this function"
      FunctionName: !Ref LambdaFunctionName
      Handler: index.handler
      MemorySize: 192
      Role:
        Fn::GetAtt:
        - LambdaExecutionRole
        - Arn
      Runtime: python3.6
      Timeout: 900
      Environment:
        Variables: 
          ENV_S3BUCKET: !Ref S3Bucket

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: logs
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:*
            Resource: arn:aws:logs:*:*:*
      - PolicyName: transcribe
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
              - transcribe:GetTranscriptionJob
              - transcribe:StartTranscriptionJob
            Resource: 
              - '*'
      - PolicyName: read-s3-bucket
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
              - s3:GetObject
            Resource: 
              - !Sub 'arn:aws:s3:::${S3Bucket}'
      - PolicyName: write-s3-bucket
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
              - s3:PutObject
              - s3:PutObjectAcl
            Resource: 
              - !Sub 'arn:aws:s3:::${S3Bucket}/*'

  LambdaInvokePermission:
    DependsOn: CreateTranscription
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName: !GetAtt CreateTranscription.Arn
      Action: 'lambda:InvokeFunction'
      Principal: s3.amazonaws.com
      SourceAccount: !Ref 'AWS::AccountId'
      SourceArn: !Sub 'arn:aws:s3:::${S3Bucket}'

  SrcBucket:
    DependsOn: CreateTranscription
    Type: AWS::S3::Bucket
    # NotificationConfiguration must be commented on stack creation,
    # then uncommented and deployed as an update.
    # See: https://aws.amazon.com/premiumsupport/knowledge-center/unable-validate-destination-s3/
    Properties:
      BucketName: !Ref S3Bucket
